////////////////////////////////////////////////////////////////////////////////
// extract_ortho_cell.cc
////////////////////////////////////////////////////////////////////////////////
/*! @file
//      Extract the orthotropic base cell from a period cell (assumes that the
//      period cell was generated by reflecting an orthotropic base cell).
*/
//  Author:  Julian Panetta (jpanetta), julian.panetta@gmail.com
//  Company:  New York University
//  Created:  07/30/2016 20:23:46
////////////////////////////////////////////////////////////////////////////////
#include <string>
#include <iostream>
#include <cstdlib>
#include "MeshIO.hh"
#include "filters/remove_dangling_vertices.hh"

using namespace std;

int main(int argc, const char *argv[])
{
    if (argc != 3) {
        cerr << "usage: ./extract_ortho_cell periodcell.msh orthocell.msh" << endl;
        exit(-1);
    }

    string  inPath = argv[1],
           outPath = argv[2];
    std::vector<MeshIO::IOVertex > vertices;
    std::vector<MeshIO::IOElement> elements;
    MeshIO::load(inPath, vertices, elements);

    elements.erase(std::remove_if(elements.begin(), elements.end(),
            [&](const MeshIO::IOElement &e) {
                for (size_t vidx : e) {
                    if ((vertices.at(vidx)[0] < 0.0) ||
                        (vertices.at(vidx)[1] < 0.0) ||
                        (vertices.at(vidx)[2] < 0.0)) return true;
                }
                return false;
            }
        ), elements.end());

    remove_dangling_vertices(vertices, elements);

    MeshIO::save(outPath, vertices, elements);

    return 0;
}
